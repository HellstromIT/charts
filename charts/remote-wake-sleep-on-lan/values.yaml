# Default values for remote-wake-sleep-on-lan.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ex0nuss/remote-wake-sleep-on-lan-docker
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

hostNetwork: true

# Let's say we want to wake 2 computers with the following configurations:

# PC1
# Displayname: PC of Mark
# MAC address: 24:00:dd:5a:21:04
# IP address: 192.168.1.146
# PC2
# Displayname: PC of John
# MAC address: 59:3c:45:3c:30:f6
# IP address: 192.168.1.177

# To configure the env vars it's easier to arrange them in a vertical table:

# RWSOLS_COMPUTER_NAME	PC of Mark	    PC of John
# RWSOLS_COMPUTER_MAC	24:00:dd:5a:21:04   59:3c:45:3c:30:f6
# RWSOLS_COMPUTER_IP	192.168.1.146	    192.168.1.177

# Now you just format the table in an array:
#     - RWSOLS_COMPUTER_NAME="PC of Mark","PC of John"
#     - RWSOLS_COMPUTER_MAC="24:00:dd:5a:21:04","59:3c:45:3c:30:f6"
#     - RWSOLS_COMPUTER_IP="192.168.1.146","192.168.1.177"

# It's important to use the format as shown: Env_var="XXX","XXX"

computers:
  RWSOLS_COMPUTER_NAME: []
  RWSOLS_COMPUTER_MAC: []
  RWSOLS_COMPUTER_IP: []

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8080

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}
